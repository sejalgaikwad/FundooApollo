var cov_jkgsgtcpa=function(){var path="/home/admin1/Desktop/fundooApollo/graphql/query.js";var hash="6cef2f88b0596de5f35a3cebe1bf0012cd03b6f3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/admin1/Desktop/fundooApollo/graphql/query.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:45}},"1":{start:{line:2,column:17},end:{line:2,column:47}},"2":{start:{line:3,column:10},end:{line:3,column:33}},"3":{start:{line:10,column:0},end:{line:32,column:1}},"4":{start:{line:11,column:4},end:{line:31,column:5}},"5":{start:{line:12,column:8},end:{line:23,column:9}},"6":{start:{line:13,column:26},end:{line:13,column:81}},"7":{start:{line:14,column:12},end:{line:17,column:13}},"8":{start:{line:15,column:26},end:{line:15,column:72}},"9":{start:{line:16,column:16},end:{line:16,column:27}},"10":{start:{line:20,column:12},end:{line:22,column:13}},"11":{start:{line:26,column:8},end:{line:26,column:24}},"12":{start:{line:27,column:8},end:{line:30,column:9}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:15},end:{line:10,column:16}},loc:{start:{line:10,column:46},end:{line:32,column:1}},line:10}},branchMap:{"0":{loc:{start:{line:12,column:8},end:{line:23,column:9}},type:"if",locations:[{start:{line:12,column:8},end:{line:23,column:9}},{start:{line:12,column:8},end:{line:23,column:9}}],line:12},"1":{loc:{start:{line:14,column:12},end:{line:17,column:13}},type:"if",locations:[{start:{line:14,column:12},end:{line:17,column:13}},{start:{line:14,column:12},end:{line:17,column:13}}],line:14}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"6cef2f88b0596de5f35a3cebe1bf0012cd03b6f3"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();var userModel=(cov_jkgsgtcpa.s[0]++,require('../model/userModel'));var notesModel=(cov_jkgsgtcpa.s[1]++,require('../model/notesModel'));var jwt=(cov_jkgsgtcpa.s[2]++,require("jsonwebtoken"));/**
  * @description       : get user
  * @param {*} root    : result of previous resolve function
  * @param {*} args    : arguments for resolver funtions
  * @param {*} context : context 
  */cov_jkgsgtcpa.s[3]++;exports.User=async(root,args,context)=>{cov_jkgsgtcpa.f[0]++;cov_jkgsgtcpa.s[4]++;try{cov_jkgsgtcpa.s[5]++;if(context.token){cov_jkgsgtcpa.b[0][0]++;var payload=(cov_jkgsgtcpa.s[6]++,await jwt.verify(context.token,process.env.APP_SECRET));cov_jkgsgtcpa.s[7]++;if(payload){cov_jkgsgtcpa.b[1][0]++;var user=(cov_jkgsgtcpa.s[8]++,await userModel.find({_id:payload.user_ID}));cov_jkgsgtcpa.s[9]++;return user;}else{cov_jkgsgtcpa.b[1][1]++;}}else{cov_jkgsgtcpa.b[0][1]++;cov_jkgsgtcpa.s[10]++;return{"message":"token not provided"};}}catch(err){cov_jkgsgtcpa.s[11]++;console.log(err);cov_jkgsgtcpa.s[12]++;return{"message":"error occured","success":false};}};