var cov_k7k42797x=function(){var path="/home/admin1/Desktop/fundooApollo/graphql/mutation/labelMutation.js";var hash="44169bd2076d38b0703117d3655b935e6b321b10";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/admin1/Desktop/fundooApollo/graphql/mutation/labelMutation.js",statementMap:{"0":{start:{line:1,column:12},end:{line:1,column:35}},"1":{start:{line:2,column:19},end:{line:2,column:52}},"2":{start:{line:3,column:15},end:{line:3,column:54}},"3":{start:{line:4,column:21},end:{line:4,column:61}},"4":{start:{line:13,column:0},end:{line:75,column:1}},"5":{start:{line:14,column:17},end:{line:17,column:5}},"6":{start:{line:18,column:4},end:{line:74,column:5}},"7":{start:{line:20,column:8},end:{line:60,column:9}},"8":{start:{line:22,column:26},end:{line:22,column:61}},"9":{start:{line:24,column:12},end:{line:56,column:13}},"10":{start:{line:25,column:16},end:{line:27,column:17}},"11":{start:{line:26,column:20},end:{line:26,column:84}},"12":{start:{line:28,column:16},end:{line:28,column:44}},"13":{start:{line:31,column:35},end:{line:34,column:18}},"14":{start:{line:35,column:16},end:{line:37,column:17}},"15":{start:{line:36,column:20},end:{line:36,column:58}},"16":{start:{line:39,column:31},end:{line:42,column:18}},"17":{start:{line:43,column:32},end:{line:43,column:53}},"18":{start:{line:44,column:16},end:{line:52,column:17}},"19":{start:{line:45,column:20},end:{line:48,column:21}},"20":{start:{line:51,column:20},end:{line:51,column:60}},"21":{start:{line:55,column:16},end:{line:55,column:56}},"22":{start:{line:59,column:12},end:{line:59,column:49}},"23":{start:{line:64,column:8},end:{line:64,column:33}},"24":{start:{line:65,column:8},end:{line:73,column:9}},"25":{start:{line:69,column:12},end:{line:69,column:26}},"26":{start:{line:71,column:12},end:{line:71,column:41}},"27":{start:{line:72,column:12},end:{line:72,column:25}},"28":{start:{line:85,column:0},end:{line:133,column:1}},"29":{start:{line:86,column:17},end:{line:89,column:5}},"30":{start:{line:90,column:4},end:{line:131,column:5}},"31":{start:{line:92,column:8},end:{line:118,column:9}},"32":{start:{line:93,column:26},end:{line:93,column:81}},"33":{start:{line:94,column:12},end:{line:114,column:13}},"34":{start:{line:95,column:16},end:{line:95,column:36}},"35":{start:{line:97,column:35},end:{line:100,column:18}},"36":{start:{line:101,column:16},end:{line:110,column:17}},"37":{start:{line:103,column:20},end:{line:106,column:21}},"38":{start:{line:109,column:20},end:{line:109,column:61}},"39":{start:{line:113,column:16},end:{line:113,column:42}},"40":{start:{line:117,column:12},end:{line:117,column:50}},"41":{start:{line:120,column:8},end:{line:120,column:33}},"42":{start:{line:122,column:8},end:{line:130,column:9}},"43":{start:{line:126,column:12},end:{line:126,column:26}},"44":{start:{line:128,column:12},end:{line:128,column:41}},"45":{start:{line:129,column:12},end:{line:129,column:25}},"46":{start:{line:143,column:0},end:{line:194,column:1}},"47":{start:{line:144,column:17},end:{line:147,column:5}},"48":{start:{line:148,column:4},end:{line:193,column:5}},"49":{start:{line:149,column:8},end:{line:180,column:9}},"50":{start:{line:151,column:12},end:{line:153,column:13}},"51":{start:{line:152,column:16},end:{line:152,column:53}},"52":{start:{line:154,column:26},end:{line:154,column:81}},"53":{start:{line:155,column:12},end:{line:177,column:13}},"54":{start:{line:157,column:34},end:{line:164,column:18}},"55":{start:{line:165,column:16},end:{line:165,column:40}},"56":{start:{line:166,column:16},end:{line:175,column:17}},"57":{start:{line:168,column:20},end:{line:171,column:21}},"58":{start:{line:174,column:20},end:{line:174,column:58}},"59":{start:{line:179,column:12},end:{line:179,column:49}},"60":{start:{line:182,column:8},end:{line:182,column:33}},"61":{start:{line:184,column:8},end:{line:192,column:9}},"62":{start:{line:188,column:12},end:{line:188,column:26}},"63":{start:{line:190,column:12},end:{line:190,column:41}},"64":{start:{line:191,column:12},end:{line:191,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:22},end:{line:13,column:23}},loc:{start:{line:13,column:53},end:{line:75,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:85,column:22},end:{line:85,column:23}},loc:{start:{line:85,column:53},end:{line:133,column:1}},line:85},"2":{name:"(anonymous_2)",decl:{start:{line:143,column:22},end:{line:143,column:23}},loc:{start:{line:143,column:53},end:{line:194,column:1}},line:143}},branchMap:{"0":{loc:{start:{line:20,column:8},end:{line:60,column:9}},type:"if",locations:[{start:{line:20,column:8},end:{line:60,column:9}},{start:{line:20,column:8},end:{line:60,column:9}}],line:20},"1":{loc:{start:{line:24,column:12},end:{line:56,column:13}},type:"if",locations:[{start:{line:24,column:12},end:{line:56,column:13}},{start:{line:24,column:12},end:{line:56,column:13}}],line:24},"2":{loc:{start:{line:25,column:16},end:{line:27,column:17}},type:"if",locations:[{start:{line:25,column:16},end:{line:27,column:17}},{start:{line:25,column:16},end:{line:27,column:17}}],line:25},"3":{loc:{start:{line:35,column:16},end:{line:37,column:17}},type:"if",locations:[{start:{line:35,column:16},end:{line:37,column:17}},{start:{line:35,column:16},end:{line:37,column:17}}],line:35},"4":{loc:{start:{line:44,column:16},end:{line:52,column:17}},type:"if",locations:[{start:{line:44,column:16},end:{line:52,column:17}},{start:{line:44,column:16},end:{line:52,column:17}}],line:44},"5":{loc:{start:{line:65,column:8},end:{line:73,column:9}},type:"if",locations:[{start:{line:65,column:8},end:{line:73,column:9}},{start:{line:65,column:8},end:{line:73,column:9}}],line:65},"6":{loc:{start:{line:65,column:12},end:{line:68,column:37}},type:"binary-expr",locations:[{start:{line:65,column:12},end:{line:65,column:41}},{start:{line:66,column:12},end:{line:66,column:38}},{start:{line:67,column:12},end:{line:67,column:36}},{start:{line:68,column:12},end:{line:68,column:37}}],line:65},"7":{loc:{start:{line:92,column:8},end:{line:118,column:9}},type:"if",locations:[{start:{line:92,column:8},end:{line:118,column:9}},{start:{line:92,column:8},end:{line:118,column:9}}],line:92},"8":{loc:{start:{line:94,column:12},end:{line:114,column:13}},type:"if",locations:[{start:{line:94,column:12},end:{line:114,column:13}},{start:{line:94,column:12},end:{line:114,column:13}}],line:94},"9":{loc:{start:{line:101,column:16},end:{line:110,column:17}},type:"if",locations:[{start:{line:101,column:16},end:{line:110,column:17}},{start:{line:101,column:16},end:{line:110,column:17}}],line:101},"10":{loc:{start:{line:122,column:8},end:{line:130,column:9}},type:"if",locations:[{start:{line:122,column:8},end:{line:130,column:9}},{start:{line:122,column:8},end:{line:130,column:9}}],line:122},"11":{loc:{start:{line:122,column:12},end:{line:125,column:37}},type:"binary-expr",locations:[{start:{line:122,column:12},end:{line:122,column:41}},{start:{line:123,column:12},end:{line:123,column:38}},{start:{line:124,column:12},end:{line:124,column:36}},{start:{line:125,column:12},end:{line:125,column:37}}],line:122},"12":{loc:{start:{line:149,column:8},end:{line:180,column:9}},type:"if",locations:[{start:{line:149,column:8},end:{line:180,column:9}},{start:{line:149,column:8},end:{line:180,column:9}}],line:149},"13":{loc:{start:{line:151,column:12},end:{line:153,column:13}},type:"if",locations:[{start:{line:151,column:12},end:{line:153,column:13}},{start:{line:151,column:12},end:{line:153,column:13}}],line:151},"14":{loc:{start:{line:151,column:16},end:{line:151,column:61}},type:"binary-expr",locations:[{start:{line:151,column:16},end:{line:151,column:35}},{start:{line:151,column:39},end:{line:151,column:61}}],line:151},"15":{loc:{start:{line:155,column:12},end:{line:177,column:13}},type:"if",locations:[{start:{line:155,column:12},end:{line:177,column:13}},{start:{line:155,column:12},end:{line:177,column:13}}],line:155},"16":{loc:{start:{line:166,column:16},end:{line:175,column:17}},type:"if",locations:[{start:{line:166,column:16},end:{line:175,column:17}},{start:{line:166,column:16},end:{line:175,column:17}}],line:166},"17":{loc:{start:{line:184,column:8},end:{line:192,column:9}},type:"if",locations:[{start:{line:184,column:8},end:{line:192,column:9}},{start:{line:184,column:8},end:{line:192,column:9}}],line:184},"18":{loc:{start:{line:184,column:12},end:{line:187,column:37}},type:"binary-expr",locations:[{start:{line:184,column:12},end:{line:184,column:41}},{start:{line:185,column:12},end:{line:185,column:38}},{start:{line:186,column:12},end:{line:186,column:36}},{start:{line:187,column:12},end:{line:187,column:37}}],line:184}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"44169bd2076d38b0703117d3655b935e6b321b10"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const jwt=(cov_k7k42797x.s[0]++,require("jsonwebtoken"));const labelModel=(cov_k7k42797x.s[1]++,require("../../model/labelModel"));const logger=(cov_k7k42797x.s[2]++,require("../../services/logger").logger);const authentication=(cov_k7k42797x.s[3]++,require("../../services/authentication"));/**
 * @description : add labels
 * @purpose : add labels
 * @param {*} root : result of previous resolve function
 * @param {*} args : arguments for resolver funtions
 * @param {*} context : context 
 */cov_k7k42797x.s[4]++;exports.createLabel=async(root,args,context)=>{cov_k7k42797x.f[0]++;let result=(cov_k7k42797x.s[5]++,{"message":"Something bad happened","success":false});cov_k7k42797x.s[6]++;try{cov_k7k42797x.s[7]++;// check if token is provided
if(context.token){cov_k7k42797x.b[0][0]++;var payload=(cov_k7k42797x.s[8]++,await authentication(context.token));cov_k7k42797x.s[9]++;if(payload){cov_k7k42797x.b[1][0]++;cov_k7k42797x.s[10]++;if(args.labelName.length<3){cov_k7k42797x.b[2][0]++;cov_k7k42797x.s[11]++;throw new Error("label name should be have length of atleast 3");}else{cov_k7k42797x.b[2][1]++;}cov_k7k42797x.s[12]++;console.log(payload.userID);// find if label name already exists for user
var presentlabel=(cov_k7k42797x.s[13]++,await labelModel.find({labelName:args.labelName,userID:payload.userID}));cov_k7k42797x.s[14]++;if(presentlabel.length>0){cov_k7k42797x.b[3][0]++;cov_k7k42797x.s[15]++;throw new Error("label already exits");}else{cov_k7k42797x.b[3][1]++;}// save label
var newlabel=(cov_k7k42797x.s[16]++,new labelModel({labelName:args.labelName,userID:payload.userID}));var savelabel=(cov_k7k42797x.s[17]++,await newlabel.save());cov_k7k42797x.s[18]++;if(savelabel){cov_k7k42797x.b[4][0]++;cov_k7k42797x.s[19]++;return{"message":"label added","success":true};}else{cov_k7k42797x.b[4][1]++;cov_k7k42797x.s[20]++;// return label connot add
throw new Error("label cannot be added");}}else{cov_k7k42797x.b[1][1]++;cov_k7k42797x.s[21]++;// return label not added
throw new Error("label cannot be added");}}else{cov_k7k42797x.b[0][1]++;cov_k7k42797x.s[22]++;// return token not provided
throw new Error("token not provided");}}// catch if error occures
catch(err){cov_k7k42797x.s[23]++;logger.error(err.message);cov_k7k42797x.s[24]++;if((cov_k7k42797x.b[6][0]++,err instanceof ReferenceError)||(cov_k7k42797x.b[6][1]++,err instanceof SyntaxError)||(cov_k7k42797x.b[6][2]++,err instanceof TypeError)||(cov_k7k42797x.b[6][3]++,err instanceof RangeError)){cov_k7k42797x.b[5][0]++;cov_k7k42797x.s[25]++;return result;}else{cov_k7k42797x.b[5][1]++;cov_k7k42797x.s[26]++;result.message=err.message;cov_k7k42797x.s[27]++;return result;}}};/**
 * @description : remove label
 * @purpose : remove label
 * @param {*} root : result of previous resolve function
 * @param {*} args : arguments for resolver funtions
 * @param {*} context : context 
 */cov_k7k42797x.s[28]++;exports.removeLabel=async(root,args,context)=>{cov_k7k42797x.f[1]++;let result=(cov_k7k42797x.s[29]++,{"message":"Something bad happened","success":false});cov_k7k42797x.s[30]++;try{cov_k7k42797x.s[31]++;// check if token is provided
if(context.token){cov_k7k42797x.b[7][0]++;var payload=(cov_k7k42797x.s[32]++,await jwt.verify(context.token,process.env.APP_SECRET));cov_k7k42797x.s[33]++;if(payload){cov_k7k42797x.b[8][0]++;cov_k7k42797x.s[34]++;console.log(payload);// find label and delete
var removedlabel=(cov_k7k42797x.s[35]++,await labelModel.findOneAndDelete({"userID":payload.userID,"_id":args.labelID}));cov_k7k42797x.s[36]++;if(removedlabel){cov_k7k42797x.b[9][0]++;cov_k7k42797x.s[37]++;return{"message":"Label Removed","success":true};}else{cov_k7k42797x.b[9][1]++;cov_k7k42797x.s[38]++;throw new Error("Unable to remove label");}}else{cov_k7k42797x.b[8][1]++;cov_k7k42797x.s[39]++;throw new Error("Un Auth");}}else{cov_k7k42797x.b[7][1]++;cov_k7k42797x.s[40]++;throw new Error("token not provideds");}}catch(err){cov_k7k42797x.s[41]++;logger.error(err.message);// return error
cov_k7k42797x.s[42]++;if((cov_k7k42797x.b[11][0]++,err instanceof ReferenceError)||(cov_k7k42797x.b[11][1]++,err instanceof SyntaxError)||(cov_k7k42797x.b[11][2]++,err instanceof TypeError)||(cov_k7k42797x.b[11][3]++,err instanceof RangeError)){cov_k7k42797x.b[10][0]++;cov_k7k42797x.s[43]++;return result;}else{cov_k7k42797x.b[10][1]++;cov_k7k42797x.s[44]++;result.message=err.message;cov_k7k42797x.s[45]++;return result;}}};/**
 * @description : update label
 * @purpose : update label
 * @param {*} root : result of previous resolve function
 * @param {*} args : arguments for resolver funtions
 * @param {*} context : context 
 */cov_k7k42797x.s[46]++;exports.updateLabel=async(root,args,context)=>{cov_k7k42797x.f[2]++;let result=(cov_k7k42797x.s[47]++,{"message":"Something bad happened","success":false});cov_k7k42797x.s[48]++;try{cov_k7k42797x.s[49]++;if(context.token){cov_k7k42797x.b[12][0]++;cov_k7k42797x.s[50]++;// check if labelName is given
if((cov_k7k42797x.b[14][0]++,args.labelName==0)||(cov_k7k42797x.b[14][1]++,args.newlabelName==0)){cov_k7k42797x.b[13][0]++;cov_k7k42797x.s[51]++;throw new Error("label name require");}else{cov_k7k42797x.b[13][1]++;}var payload=(cov_k7k42797x.s[52]++,await jwt.verify(context.token,process.env.APP_SECRET));cov_k7k42797x.s[53]++;if(payload){cov_k7k42797x.b[15][0]++;//find label of user and update
var updateLabel=(cov_k7k42797x.s[54]++,await labelModel.findOneAndUpdate({userID:payload.userID,_id:args.labelID},{$set:{labelName:args.newlabelName}}));cov_k7k42797x.s[55]++;console.log(updateLabel);cov_k7k42797x.s[56]++;if(updateLabel){cov_k7k42797x.b[16][0]++;cov_k7k42797x.s[57]++;return{"message":"label update success","success":true};}else{cov_k7k42797x.b[16][1]++;cov_k7k42797x.s[58]++;throw new Error("label connot update");}}else{cov_k7k42797x.b[15][1]++;}}else{cov_k7k42797x.b[12][1]++;cov_k7k42797x.s[59]++;throw new Error("token not provided");}}catch(err){cov_k7k42797x.s[60]++;logger.error(err.message);// return error
cov_k7k42797x.s[61]++;if((cov_k7k42797x.b[18][0]++,err instanceof ReferenceError)||(cov_k7k42797x.b[18][1]++,err instanceof SyntaxError)||(cov_k7k42797x.b[18][2]++,err instanceof TypeError)||(cov_k7k42797x.b[18][3]++,err instanceof RangeError)){cov_k7k42797x.b[17][0]++;cov_k7k42797x.s[62]++;return result;}else{cov_k7k42797x.b[17][1]++;cov_k7k42797x.s[63]++;result.message=err.message;cov_k7k42797x.s[64]++;return result;}}};