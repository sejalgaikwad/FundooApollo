var cov_w0qg0ta3b=function(){var path="/home/admin1/Desktop/fundooApollo/graphql/mutation/userMutaion.js";var hash="84de7240874fad580711c337d8518c23f935d173";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/admin1/Desktop/fundooApollo/graphql/mutation/userMutaion.js",statementMap:{"0":{start:{line:1,column:18},end:{line:1,column:50}},"1":{start:{line:2,column:19},end:{line:2,column:52}},"2":{start:{line:3,column:15},end:{line:3,column:32}},"3":{start:{line:4,column:12},end:{line:4,column:35}},"4":{start:{line:5,column:17},end:{line:5,column:71}},"5":{start:{line:6,column:15},end:{line:6,column:54}},"6":{start:{line:16,column:0},end:{line:82,column:1}},"7":{start:{line:17,column:17},end:{line:20,column:5}},"8":{start:{line:21,column:4},end:{line:80,column:5}},"9":{start:{line:23,column:26},end:{line:23,column:73}},"10":{start:{line:24,column:8},end:{line:26,column:9}},"11":{start:{line:25,column:12},end:{line:25,column:46}},"12":{start:{line:28,column:8},end:{line:30,column:9}},"13":{start:{line:29,column:12},end:{line:29,column:64}},"14":{start:{line:32,column:19},end:{line:34,column:10}},"15":{start:{line:36,column:8},end:{line:38,column:9}},"16":{start:{line:37,column:12},end:{line:37,column:51}},"17":{start:{line:40,column:19},end:{line:40,column:55}},"18":{start:{line:42,column:22},end:{line:48,column:10}},"19":{start:{line:51,column:23},end:{line:51,column:43}},"20":{start:{line:52,column:20},end:{line:52,column:75}},"21":{start:{line:54,column:18},end:{line:54,column:113}},"22":{start:{line:55,column:8},end:{line:68,column:9}},"23":{start:{line:57,column:12},end:{line:57,column:38}},"24":{start:{line:58,column:12},end:{line:58,column:47}},"25":{start:{line:59,column:12},end:{line:62,column:14}},"26":{start:{line:64,column:12},end:{line:67,column:13}},"27":{start:{line:70,column:8},end:{line:70,column:33}},"28":{start:{line:71,column:8},end:{line:79,column:9}},"29":{start:{line:75,column:12},end:{line:75,column:26}},"30":{start:{line:77,column:12},end:{line:77,column:41}},"31":{start:{line:78,column:12},end:{line:78,column:25}},"32":{start:{line:91,column:0},end:{line:156,column:1}},"33":{start:{line:92,column:17},end:{line:95,column:5}},"34":{start:{line:96,column:4},end:{line:155,column:5}},"35":{start:{line:98,column:26},end:{line:98,column:73}},"36":{start:{line:99,column:8},end:{line:101,column:9}},"37":{start:{line:100,column:12},end:{line:100,column:54}},"38":{start:{line:103,column:8},end:{line:106,column:9}},"39":{start:{line:105,column:12},end:{line:105,column:64}},"40":{start:{line:108,column:19},end:{line:110,column:10}},"41":{start:{line:112,column:8},end:{line:112,column:50}},"42":{start:{line:113,column:8},end:{line:142,column:9}},"43":{start:{line:114,column:12},end:{line:117,column:13}},"44":{start:{line:116,column:16},end:{line:116,column:53}},"45":{start:{line:119,column:24},end:{line:119,column:77}},"46":{start:{line:120,column:12},end:{line:139,column:13}},"47":{start:{line:122,column:28},end:{line:125,column:42}},"48":{start:{line:127,column:29},end:{line:127,column:75}},"49":{start:{line:130,column:16},end:{line:130,column:80}},"50":{start:{line:131,column:16},end:{line:131,column:44}},"51":{start:{line:132,column:16},end:{line:136,column:17}},"52":{start:{line:138,column:16},end:{line:138,column:54}},"53":{start:{line:141,column:12},end:{line:141,column:45}},"54":{start:{line:145,column:8},end:{line:145,column:33}},"55":{start:{line:146,column:8},end:{line:154,column:9}},"56":{start:{line:150,column:12},end:{line:150,column:26}},"57":{start:{line:152,column:12},end:{line:152,column:41}},"58":{start:{line:153,column:12},end:{line:153,column:25}},"59":{start:{line:165,column:0},end:{line:206,column:1}},"60":{start:{line:166,column:17},end:{line:169,column:5}},"61":{start:{line:170,column:4},end:{line:204,column:5}},"62":{start:{line:172,column:19},end:{line:174,column:10}},"63":{start:{line:177,column:8},end:{line:192,column:9}},"64":{start:{line:179,column:24},end:{line:179,column:79}},"65":{start:{line:180,column:22},end:{line:180,column:101}},"66":{start:{line:182,column:12},end:{line:182,column:37}},"67":{start:{line:184,column:12},end:{line:184,column:50}},"68":{start:{line:185,column:12},end:{line:188,column:13}},"69":{start:{line:191,column:12},end:{line:191,column:43}},"70":{start:{line:194,column:8},end:{line:194,column:33}},"71":{start:{line:195,column:8},end:{line:203,column:9}},"72":{start:{line:199,column:12},end:{line:199,column:26}},"73":{start:{line:201,column:12},end:{line:201,column:41}},"74":{start:{line:202,column:12},end:{line:202,column:25}},"75":{start:{line:215,column:0},end:{line:257,column:1}},"76":{start:{line:216,column:17},end:{line:219,column:5}},"77":{start:{line:220,column:4},end:{line:255,column:5}},"78":{start:{line:221,column:8},end:{line:221,column:34}},"79":{start:{line:223,column:22},end:{line:223,column:77}},"80":{start:{line:225,column:25},end:{line:231,column:10}},"81":{start:{line:232,column:8},end:{line:242,column:9}},"82":{start:{line:234,column:12},end:{line:234,column:53}},"83":{start:{line:235,column:12},end:{line:238,column:13}},"84":{start:{line:241,column:12},end:{line:241,column:65}},"85":{start:{line:245,column:8},end:{line:245,column:33}},"86":{start:{line:246,column:8},end:{line:254,column:9}},"87":{start:{line:250,column:12},end:{line:250,column:26}},"88":{start:{line:252,column:12},end:{line:252,column:41}},"89":{start:{line:253,column:12},end:{line:253,column:25}},"90":{start:{line:266,column:0},end:{line:319,column:1}},"91":{start:{line:267,column:17},end:{line:270,column:5}},"92":{start:{line:271,column:4},end:{line:317,column:5}},"93":{start:{line:273,column:8},end:{line:281,column:9}},"94":{start:{line:275,column:12},end:{line:275,column:54}},"95":{start:{line:278,column:13},end:{line:281,column:9}},"96":{start:{line:280,column:12},end:{line:280,column:62}},"97":{start:{line:282,column:8},end:{line:282,column:34}},"98":{start:{line:284,column:22},end:{line:284,column:77}},"99":{start:{line:286,column:26},end:{line:286,column:60}},"100":{start:{line:288,column:25},end:{line:294,column:10}},"101":{start:{line:295,column:8},end:{line:304,column:9}},"102":{start:{line:296,column:12},end:{line:296,column:49}},"103":{start:{line:297,column:12},end:{line:300,column:13}},"104":{start:{line:303,column:12},end:{line:303,column:51}},"105":{start:{line:307,column:8},end:{line:307,column:33}},"106":{start:{line:308,column:8},end:{line:316,column:9}},"107":{start:{line:312,column:12},end:{line:312,column:26}},"108":{start:{line:314,column:12},end:{line:314,column:41}},"109":{start:{line:315,column:12},end:{line:315,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:16,column:19},end:{line:16,column:20}},loc:{start:{line:16,column:52},end:{line:82,column:1}},line:16},"1":{name:"(anonymous_1)",decl:{start:{line:91,column:16},end:{line:91,column:17}},loc:{start:{line:91,column:55},end:{line:156,column:1}},line:91},"2":{name:"(anonymous_2)",decl:{start:{line:165,column:25},end:{line:165,column:26}},loc:{start:{line:165,column:58},end:{line:206,column:1}},line:165},"3":{name:"(anonymous_3)",decl:{start:{line:215,column:22},end:{line:215,column:23}},loc:{start:{line:215,column:55},end:{line:257,column:1}},line:215},"4":{name:"(anonymous_4)",decl:{start:{line:266,column:24},end:{line:266,column:25}},loc:{start:{line:266,column:57},end:{line:319,column:1}},line:266}},branchMap:{"0":{loc:{start:{line:24,column:8},end:{line:26,column:9}},type:"if",locations:[{start:{line:24,column:8},end:{line:26,column:9}},{start:{line:24,column:8},end:{line:26,column:9}}],line:24},"1":{loc:{start:{line:28,column:8},end:{line:30,column:9}},type:"if",locations:[{start:{line:28,column:8},end:{line:30,column:9}},{start:{line:28,column:8},end:{line:30,column:9}}],line:28},"2":{loc:{start:{line:36,column:8},end:{line:38,column:9}},type:"if",locations:[{start:{line:36,column:8},end:{line:38,column:9}},{start:{line:36,column:8},end:{line:38,column:9}}],line:36},"3":{loc:{start:{line:55,column:8},end:{line:68,column:9}},type:"if",locations:[{start:{line:55,column:8},end:{line:68,column:9}},{start:{line:55,column:8},end:{line:68,column:9}}],line:55},"4":{loc:{start:{line:71,column:8},end:{line:79,column:9}},type:"if",locations:[{start:{line:71,column:8},end:{line:79,column:9}},{start:{line:71,column:8},end:{line:79,column:9}}],line:71},"5":{loc:{start:{line:71,column:12},end:{line:74,column:37}},type:"binary-expr",locations:[{start:{line:71,column:12},end:{line:71,column:41}},{start:{line:72,column:12},end:{line:72,column:38}},{start:{line:73,column:12},end:{line:73,column:36}},{start:{line:74,column:12},end:{line:74,column:37}}],line:71},"6":{loc:{start:{line:99,column:8},end:{line:101,column:9}},type:"if",locations:[{start:{line:99,column:8},end:{line:101,column:9}},{start:{line:99,column:8},end:{line:101,column:9}}],line:99},"7":{loc:{start:{line:103,column:8},end:{line:106,column:9}},type:"if",locations:[{start:{line:103,column:8},end:{line:106,column:9}},{start:{line:103,column:8},end:{line:106,column:9}}],line:103},"8":{loc:{start:{line:113,column:8},end:{line:142,column:9}},type:"if",locations:[{start:{line:113,column:8},end:{line:142,column:9}},{start:{line:113,column:8},end:{line:142,column:9}}],line:113},"9":{loc:{start:{line:114,column:12},end:{line:117,column:13}},type:"if",locations:[{start:{line:114,column:12},end:{line:117,column:13}},{start:{line:114,column:12},end:{line:117,column:13}}],line:114},"10":{loc:{start:{line:120,column:12},end:{line:139,column:13}},type:"if",locations:[{start:{line:120,column:12},end:{line:139,column:13}},{start:{line:120,column:12},end:{line:139,column:13}}],line:120},"11":{loc:{start:{line:146,column:8},end:{line:154,column:9}},type:"if",locations:[{start:{line:146,column:8},end:{line:154,column:9}},{start:{line:146,column:8},end:{line:154,column:9}}],line:146},"12":{loc:{start:{line:146,column:12},end:{line:149,column:37}},type:"binary-expr",locations:[{start:{line:146,column:12},end:{line:146,column:41}},{start:{line:147,column:12},end:{line:147,column:38}},{start:{line:148,column:12},end:{line:148,column:36}},{start:{line:149,column:12},end:{line:149,column:37}}],line:146},"13":{loc:{start:{line:177,column:8},end:{line:192,column:9}},type:"if",locations:[{start:{line:177,column:8},end:{line:192,column:9}},{start:{line:177,column:8},end:{line:192,column:9}}],line:177},"14":{loc:{start:{line:195,column:8},end:{line:203,column:9}},type:"if",locations:[{start:{line:195,column:8},end:{line:203,column:9}},{start:{line:195,column:8},end:{line:203,column:9}}],line:195},"15":{loc:{start:{line:195,column:12},end:{line:198,column:37}},type:"binary-expr",locations:[{start:{line:195,column:12},end:{line:195,column:41}},{start:{line:196,column:12},end:{line:196,column:38}},{start:{line:197,column:12},end:{line:197,column:36}},{start:{line:198,column:12},end:{line:198,column:37}}],line:195},"16":{loc:{start:{line:232,column:8},end:{line:242,column:9}},type:"if",locations:[{start:{line:232,column:8},end:{line:242,column:9}},{start:{line:232,column:8},end:{line:242,column:9}}],line:232},"17":{loc:{start:{line:246,column:8},end:{line:254,column:9}},type:"if",locations:[{start:{line:246,column:8},end:{line:254,column:9}},{start:{line:246,column:8},end:{line:254,column:9}}],line:246},"18":{loc:{start:{line:246,column:12},end:{line:249,column:37}},type:"binary-expr",locations:[{start:{line:246,column:12},end:{line:246,column:41}},{start:{line:247,column:12},end:{line:247,column:38}},{start:{line:248,column:12},end:{line:248,column:36}},{start:{line:249,column:12},end:{line:249,column:37}}],line:246},"19":{loc:{start:{line:273,column:8},end:{line:281,column:9}},type:"if",locations:[{start:{line:273,column:8},end:{line:281,column:9}},{start:{line:273,column:8},end:{line:281,column:9}}],line:273},"20":{loc:{start:{line:278,column:13},end:{line:281,column:9}},type:"if",locations:[{start:{line:278,column:13},end:{line:281,column:9}},{start:{line:278,column:13},end:{line:281,column:9}}],line:278},"21":{loc:{start:{line:295,column:8},end:{line:304,column:9}},type:"if",locations:[{start:{line:295,column:8},end:{line:304,column:9}},{start:{line:295,column:8},end:{line:304,column:9}}],line:295},"22":{loc:{start:{line:308,column:8},end:{line:316,column:9}},type:"if",locations:[{start:{line:308,column:8},end:{line:316,column:9}},{start:{line:308,column:8},end:{line:316,column:9}}],line:308},"23":{loc:{start:{line:308,column:12},end:{line:311,column:37}},type:"binary-expr",locations:[{start:{line:308,column:12},end:{line:308,column:41}},{start:{line:309,column:12},end:{line:309,column:38}},{start:{line:310,column:12},end:{line:310,column:36}},{start:{line:311,column:12},end:{line:311,column:37}}],line:308}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"84de7240874fad580711c337d8518c23f935d173"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const userModel=(cov_w0qg0ta3b.s[0]++,require('../../model/userModel'));const labelModel=(cov_w0qg0ta3b.s[1]++,require('../../model/labelModel'));const bcrypt=(cov_w0qg0ta3b.s[2]++,require('bcrypt'));const jwt=(cov_w0qg0ta3b.s[3]++,require('jsonwebtoken'));const sendMail=(cov_w0qg0ta3b.s[4]++,require('../../services/nodemailer').sendEmailFunction);const logger=(cov_w0qg0ta3b.s[5]++,require("../../services/logger").logger);/**
 * @description : registration of user
 * @purpose : register user
 * @param {*} root : result of previous resolve function
 * @param {*} args : arguments for resolver funtions
 * @param {*} context : context 
 */cov_w0qg0ta3b.s[6]++;exports.register=async(parent,args,context)=>{cov_w0qg0ta3b.f[0]++;let result=(cov_w0qg0ta3b.s[7]++,{"message":"Something bad happened","success":false});cov_w0qg0ta3b.s[8]++;try{// email validation
var emailFormat=(cov_w0qg0ta3b.s[9]++,/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/);cov_w0qg0ta3b.s[10]++;if(!emailFormat.test(args.email)){cov_w0qg0ta3b.b[0][0]++;cov_w0qg0ta3b.s[11]++;throw new Error("not valid email");}else{cov_w0qg0ta3b.b[0][1]++;}// password validation
cov_w0qg0ta3b.s[12]++;if(args.password.length<8){cov_w0qg0ta3b.b[1][0]++;cov_w0qg0ta3b.s[13]++;throw new Error("password must have atleast 8 char");}else{cov_w0qg0ta3b.b[1][1]++;}// check if user exists
var user=(cov_w0qg0ta3b.s[14]++,await userModel.find({"email":args.email}));cov_w0qg0ta3b.s[15]++;if(user.length>0){cov_w0qg0ta3b.b[2][0]++;cov_w0qg0ta3b.s[16]++;throw new Error("email already exists");}else{cov_w0qg0ta3b.b[2][1]++;}// encrypt password
var hash=(cov_w0qg0ta3b.s[17]++,await bcrypt.hash(args.password,10));var newUser=(cov_w0qg0ta3b.s[18]++,new userModel({"firstname":args.firstname,"lastname":args.lastname,"email":args.email,"password":hash,"verified":false}));// save user 
var saveUser=(cov_w0qg0ta3b.s[19]++,await newUser.save());var token=(cov_w0qg0ta3b.s[20]++,jwt.sign({"email":args.email},process.env.APP_SECRET));var url=(cov_w0qg0ta3b.s[21]++,` click on following link for email verification \n\n ${context.origin}/graphql?token=`+token);cov_w0qg0ta3b.s[22]++;if(saveUser){cov_w0qg0ta3b.b[3][0]++;cov_w0qg0ta3b.s[23]++;// send mail for email verification
sendMail(url,args.email);cov_w0qg0ta3b.s[24]++;logger.info("registration success");cov_w0qg0ta3b.s[25]++;return{"message":"Check yours mail for email verification","success":true};}else{cov_w0qg0ta3b.b[3][1]++;cov_w0qg0ta3b.s[26]++;return{"message":"registration unsucess","success":false};}}catch(err){cov_w0qg0ta3b.s[27]++;logger.error(err.message);cov_w0qg0ta3b.s[28]++;if((cov_w0qg0ta3b.b[5][0]++,err instanceof ReferenceError)||(cov_w0qg0ta3b.b[5][1]++,err instanceof SyntaxError)||(cov_w0qg0ta3b.b[5][2]++,err instanceof TypeError)||(cov_w0qg0ta3b.b[5][3]++,err instanceof RangeError)){cov_w0qg0ta3b.b[4][0]++;cov_w0qg0ta3b.s[29]++;return result;}else{cov_w0qg0ta3b.b[4][1]++;cov_w0qg0ta3b.s[30]++;result.message=err.message;cov_w0qg0ta3b.s[31]++;return result;}}};/**
 * @description : login user
 * @purpose : send token if user is login
 * @param {*} root : result of previous resolve function
 * @param {*} args : arguments for resolver funtions
 * @param {*} context : context 
 */cov_w0qg0ta3b.s[32]++;exports.login=async(parent,args,context,info)=>{cov_w0qg0ta3b.f[1]++;let result=(cov_w0qg0ta3b.s[33]++,{"message":"Something bad happened","success":false});cov_w0qg0ta3b.s[34]++;try{// Email validation
var emailFormat=(cov_w0qg0ta3b.s[35]++,/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/);cov_w0qg0ta3b.s[36]++;if(!emailFormat.test(args.email)){cov_w0qg0ta3b.b[6][0]++;cov_w0qg0ta3b.s[37]++;throw new Error("Incorrect email address");}else{cov_w0qg0ta3b.b[6][1]++;}// password verification
cov_w0qg0ta3b.s[38]++;if(args.password.length<8){cov_w0qg0ta3b.b[7][0]++;cov_w0qg0ta3b.s[39]++;throw new Error("password must have atleast 8 char");}else{cov_w0qg0ta3b.b[7][1]++;}// check if user exists
var user=(cov_w0qg0ta3b.s[40]++,await userModel.find({"email":args.email}));cov_w0qg0ta3b.s[41]++;console.log("user================>",user);cov_w0qg0ta3b.s[42]++;if(user.length>0){cov_w0qg0ta3b.b[8][0]++;cov_w0qg0ta3b.s[43]++;if(user[0].verified===false){cov_w0qg0ta3b.b[9][0]++;cov_w0qg0ta3b.s[44]++;throw new Error("Email not varified");}else{cov_w0qg0ta3b.b[9][1]++;}// compare password
var valid=(cov_w0qg0ta3b.s[45]++,await bcrypt.compare(args.password,user[0].password));cov_w0qg0ta3b.s[46]++;if(valid){cov_w0qg0ta3b.b[10][0]++;// Generate token
var token=(cov_w0qg0ta3b.s[47]++,jwt.sign({"email":user[0].email,"user_ID":user[0].id},process.env.APP_SECRET));var labels=(cov_w0qg0ta3b.s[48]++,await labelModel.find({UserID:user[0]._id}));// add labels to redis
cov_w0qg0ta3b.s[49]++;await client.set("labels"+user[0]._id,JSON.stringify(labels));cov_w0qg0ta3b.s[50]++;logger.info("login success");cov_w0qg0ta3b.s[51]++;return{"message":"login sucess","token":token,"success":true};}else{cov_w0qg0ta3b.b[10][1]++;cov_w0qg0ta3b.s[52]++;throw new Error("in correct password");}}else{cov_w0qg0ta3b.b[8][1]++;cov_w0qg0ta3b.s[53]++;throw new Error("Not registered");}}catch(err){cov_w0qg0ta3b.s[54]++;logger.error(err.message);cov_w0qg0ta3b.s[55]++;if((cov_w0qg0ta3b.b[12][0]++,err instanceof ReferenceError)||(cov_w0qg0ta3b.b[12][1]++,err instanceof SyntaxError)||(cov_w0qg0ta3b.b[12][2]++,err instanceof TypeError)||(cov_w0qg0ta3b.b[12][3]++,err instanceof RangeError)){cov_w0qg0ta3b.b[11][0]++;cov_w0qg0ta3b.s[56]++;return result;}else{cov_w0qg0ta3b.b[11][1]++;cov_w0qg0ta3b.s[57]++;result.message=err.message;cov_w0qg0ta3b.s[58]++;return result;}}};/**
 * @description : forgot password
 * @purpose : send URL on email to reset password
 * @param {*} root : result of previous resolve function
 * @param {*} args : arguments for resolver funtions
 * @param {*} context : context 
 */cov_w0qg0ta3b.s[59]++;exports.forgotpassword=async(parent,args,context)=>{cov_w0qg0ta3b.f[2]++;let result=(cov_w0qg0ta3b.s[60]++,{"message":"Something bad happened","success":false});cov_w0qg0ta3b.s[61]++;try{// check if user is registerd
var user=(cov_w0qg0ta3b.s[62]++,await userModel.find({'email':args.email}));cov_w0qg0ta3b.s[63]++;if(user.length>0){cov_w0qg0ta3b.b[13][0]++;// Send url with token for reseting password
var token=(cov_w0qg0ta3b.s[64]++,jwt.sign({email:args.email},process.env.APP_SECRET));var url=(cov_w0qg0ta3b.s[65]++,` click on url to reset password \n\n ${context.origin}/graphql?token=`+token);// send mail for reset password
cov_w0qg0ta3b.s[66]++;sendMail(url,args.email);// return mail send messege
cov_w0qg0ta3b.s[67]++;logger.info("forgot password success");cov_w0qg0ta3b.s[68]++;return{"message":"mail send to email","success":true};}else{cov_w0qg0ta3b.b[13][1]++;cov_w0qg0ta3b.s[69]++;throw new Error("Invalid user");}}catch(err){cov_w0qg0ta3b.s[70]++;logger.error(err.message);cov_w0qg0ta3b.s[71]++;if((cov_w0qg0ta3b.b[15][0]++,err instanceof ReferenceError)||(cov_w0qg0ta3b.b[15][1]++,err instanceof SyntaxError)||(cov_w0qg0ta3b.b[15][2]++,err instanceof TypeError)||(cov_w0qg0ta3b.b[15][3]++,err instanceof RangeError)){cov_w0qg0ta3b.b[14][0]++;cov_w0qg0ta3b.s[72]++;return result;}else{cov_w0qg0ta3b.b[14][1]++;cov_w0qg0ta3b.s[73]++;result.message=err.message;cov_w0qg0ta3b.s[74]++;return result;}}};/**
 * @description : verify Email
 * @purpose : verify email for registration
 * @param {*} root : result of previous resolve function
 * @param {*} args : arguments for resolver funtions
 * @param {*} context : context 
 */cov_w0qg0ta3b.s[75]++;exports.verifyEmail=async(parent,args,context)=>{cov_w0qg0ta3b.f[3]++;let result=(cov_w0qg0ta3b.s[76]++,{"message":"Something bad happened","success":false});cov_w0qg0ta3b.s[77]++;try{cov_w0qg0ta3b.s[78]++;console.log(context.token);// verify token
let payload=(cov_w0qg0ta3b.s[79]++,await jwt.verify(context.token,process.env.APP_SECRET));// if token is verified set varification true
var updateUser=(cov_w0qg0ta3b.s[80]++,await userModel.updateOne({"email":payload.email},{$set:{verified:true}}));cov_w0qg0ta3b.s[81]++;if(updateUser){cov_w0qg0ta3b.b[16][0]++;cov_w0qg0ta3b.s[82]++;// return success message
logger.info("email verification success");cov_w0qg0ta3b.s[83]++;return{"message":"email verification sucessful","success":true};}else{cov_w0qg0ta3b.b[16][1]++;cov_w0qg0ta3b.s[84]++;throw new Error("Email verification not successfull");}}catch(err){cov_w0qg0ta3b.s[85]++;logger.error(err.message);cov_w0qg0ta3b.s[86]++;if((cov_w0qg0ta3b.b[18][0]++,err instanceof ReferenceError)||(cov_w0qg0ta3b.b[18][1]++,err instanceof SyntaxError)||(cov_w0qg0ta3b.b[18][2]++,err instanceof TypeError)||(cov_w0qg0ta3b.b[18][3]++,err instanceof RangeError)){cov_w0qg0ta3b.b[17][0]++;cov_w0qg0ta3b.s[87]++;return result;}else{cov_w0qg0ta3b.b[17][1]++;cov_w0qg0ta3b.s[88]++;result.message=err.message;cov_w0qg0ta3b.s[89]++;return result;}}};/**
 * @description : reset password
 * @purpose : reset password
 * @param {*} root : result of previous resolve function
 * @param {*} args : arguments for resolver funtions
 * @param {*} context : context 
 */cov_w0qg0ta3b.s[90]++;exports.resetpassword=async(parent,args,context)=>{cov_w0qg0ta3b.f[4]++;let result=(cov_w0qg0ta3b.s[91]++,{"message":"Something bad happened","success":false});cov_w0qg0ta3b.s[92]++;try{cov_w0qg0ta3b.s[93]++;// check if password and confirmpassword match
if(args.password!==args.confirmpassword){cov_w0qg0ta3b.b[19][0]++;cov_w0qg0ta3b.s[94]++;throw new Error("password does not match");}// check if password has min 8 length
else{cov_w0qg0ta3b.b[19][1]++;cov_w0qg0ta3b.s[95]++;if(args.password.length<8){cov_w0qg0ta3b.b[20][0]++;cov_w0qg0ta3b.s[96]++;throw new Error("password length should be min 8");}else{cov_w0qg0ta3b.b[20][1]++;}}cov_w0qg0ta3b.s[97]++;console.log(context.token);// verify token
let payload=(cov_w0qg0ta3b.s[98]++,await jwt.verify(context.token,process.env.APP_SECRET));//encrypt password
var newPassword=(cov_w0qg0ta3b.s[99]++,bcrypt.hashSync(args.password,10));// update password
var updateUser=(cov_w0qg0ta3b.s[100]++,await userModel.updateOne({"email":payload.email},{$set:{password:newPassword}}));cov_w0qg0ta3b.s[101]++;if(updateUser){cov_w0qg0ta3b.b[21][0]++;cov_w0qg0ta3b.s[102]++;logger.info("password reset success");cov_w0qg0ta3b.s[103]++;return{"message":"update sucessful","success":true};}else{cov_w0qg0ta3b.b[21][1]++;cov_w0qg0ta3b.s[104]++;throw new Error("update unsuccessfull");}}catch(err){cov_w0qg0ta3b.s[105]++;logger.error(err.message);cov_w0qg0ta3b.s[106]++;if((cov_w0qg0ta3b.b[23][0]++,err instanceof ReferenceError)||(cov_w0qg0ta3b.b[23][1]++,err instanceof SyntaxError)||(cov_w0qg0ta3b.b[23][2]++,err instanceof TypeError)||(cov_w0qg0ta3b.b[23][3]++,err instanceof RangeError)){cov_w0qg0ta3b.b[22][0]++;cov_w0qg0ta3b.s[107]++;return result;}else{cov_w0qg0ta3b.b[22][1]++;cov_w0qg0ta3b.s[108]++;result.message=err.message;cov_w0qg0ta3b.s[109]++;return result;}}};