var cov_p9f05dkyh=function(){var path="/home/admin1/Desktop/fundooApollo/server.js";var hash="d1c664f3f4e50d2bd644b440baf27aff2e1a25a7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/admin1/Desktop/fundooApollo/server.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:27}},"1":{start:{line:2,column:25},end:{line:2,column:57}},"2":{start:{line:3,column:16},end:{line:3,column:34}},"3":{start:{line:4,column:21},end:{line:4,column:48}},"4":{start:{line:5,column:15},end:{line:5,column:47}},"5":{start:{line:6,column:18},end:{line:6,column:57}},"6":{start:{line:7,column:17},end:{line:7,column:44}},"7":{start:{line:8,column:24},end:{line:8,column:65}},"8":{start:{line:9,column:13},end:{line:9,column:29}},"9":{start:{line:11,column:0},end:{line:11,column:18}},"10":{start:{line:14,column:0},end:{line:14,column:24}},"11":{start:{line:16,column:15},end:{line:25,column:2}},"12":{start:{line:19,column:25},end:{line:24,column:3}},"13":{start:{line:27,column:12},end:{line:27,column:21}},"14":{start:{line:29,column:0},end:{line:29,column:35}},"15":{start:{line:31,column:0},end:{line:31,column:32}},"16":{start:{line:34,column:0},end:{line:36,column:2}},"17":{start:{line:35,column:2},end:{line:35,column:51}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:11},end:{line:19,column:12}},loc:{start:{line:19,column:25},end:{line:24,column:3}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:34,column:17},end:{line:34,column:18}},loc:{start:{line:34,column:23},end:{line:36,column:1}},line:34}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},f:{"0":0,"1":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"d1c664f3f4e50d2bd644b440baf27aff2e1a25a7"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_p9f05dkyh.s[0]++;require('dotenv').config();const{ApolloServer}=(cov_p9f05dkyh.s[1]++,require('apollo-server-express'));const express=(cov_p9f05dkyh.s[2]++,require('express'));const{typeDefs}=(cov_p9f05dkyh.s[3]++,require('./graphql/schema'));const upload=(cov_p9f05dkyh.s[4]++,require('./services/aws').upload);const resolvers=(cov_p9f05dkyh.s[5]++,require('./graphql/resolver').resolvers);const dbConfig=(cov_p9f05dkyh.s[6]++,require('./config/mongoDb'));const redisConnection=(cov_p9f05dkyh.s[7]++,require("./config/redis").redisConnection);const port=(cov_p9f05dkyh.s[8]++,process.env.PORT);// redis connection
cov_p9f05dkyh.s[9]++;redisConnection();// connection to mongoose
cov_p9f05dkyh.s[10]++;dbConfig.mongoConnect();const server=(cov_p9f05dkyh.s[11]++,new ApolloServer({typeDefs,resolvers,context:({req})=>{cov_p9f05dkyh.f[0]++;cov_p9f05dkyh.s[12]++;return{token:req.query.token,origin:req.headers.origin,code:req.query.code,request:req};}}));const app=(cov_p9f05dkyh.s[13]++,express());cov_p9f05dkyh.s[14]++;app.use("*",upload.single('image'));cov_p9f05dkyh.s[15]++;server.applyMiddleware({app});//  start server
cov_p9f05dkyh.s[16]++;app.listen(port,()=>{cov_p9f05dkyh.f[1]++;cov_p9f05dkyh.s[17]++;console.log("server started on "+port+"port");});